Board class{
	Cell[][] cells;
}

Player {
	name
	symbol
}

Game {
	Board board;
	
	playMove(player, position)
	allowed()
	won()
	start()	
}

Input taking strategy is different
in this tic-tac-toe v/s splitwise

in the input format of splitwise
we give commands and do not ask 
for input from user like the case
of TTT.

We have to come up with some other way
to do it?

In most (all) of the LLD designs we should 
not ask for input.

But then how will it look?


Ok, so I have seen few YT videos
Most of them have just hard coded the players
and board size


Few things I have decided
Take input Mode?
Commands?
	-create_board board_size player_size
	-add_player name1
	-add_player name2
	-start_game
	| | |
	| | |
	| | |
	name1 turn 
	
	-create_board board_size player_size player_name1
	-place_move i j
	-exit
	
	Now it looks fine IG
	
	take care of commands 
	play_move not before started
	play_move not after has finished(won/ no moves left)
	
	

	
UPD: 
Writing Test cases
1. CommandExecutor input is List
But it should be InputCommand

2. We are updating the parameters
in the instance yet we are using 
the factory with only one instance, 
we should either create new everytime
or ....... should not initialise
there. 



Learning:
1. use Proxy for validation?
 So that we do not have to do it,
 at validation, later when used from somewhere els
 
2. CommandExecutor should take Command
 Dont usually take primitives as input
 
3. Taking input as a command is good IG

4. Write Unit test cases right after 
developing a piece. 
